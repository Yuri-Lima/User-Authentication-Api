version: "3.9"
services:
  # NodeJS API Services
  node:
    container_name: ${PROD_DOCKER_CONTAINER_NAME}
    build: . # use the current directory as build context in the DockerFile
    image: ${PROD_DOCKER_IMAGE_NAME}
    deploy:
      restart_policy: # restart the container if it exits
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources: # limit the resources used by the container
        limits:
          memory: ${PROD_DOCKER_MEMORY_LIMIT}
        reservations:
          memory: ${PROD_DOCKER_MEMORY_RESERVATION}
    volumes:
      - .:/usr/src/app # mount the current directory as /usr/src/app in the container
    environment:
      PORT: ${PROD_DOCKER_HTTP_PORT}
      NODE_ENV: ${NODE_ENV}
      # MONDO Settings
      MONGO_URI: mongodb://${PROD_MONGO_USER}:${PROD_MONGO_PASSWORD}@${PROD_MONGO_DB_COTAINER_NAME}:27017/
      MONGO_INITDB_ROOT_PASSWORD: ${PROD_MONGO_PASSWORD}
      MONGO_INITDB_ROOT_USERNAME: ${PROD_MONGO_USER}
      DB_NAME: ${PROD_MONGO_DB_NAME}
      # Node APP Settings
      NAME: ${PROD_DOCKER_APP_NAME}
      COMPOSE_PROJECT_NAME: ${PROD_DOCKER_APP_NAME}
      # SMTP Settings
      SMTP_DOCKER_HOST: ${PROD_SMTP_HOST}
      SMTP_DOCKER_PORT: ${PROD_SMTP_PORT}
      SMTP_DOCKER_SECURE: ${PROD_SMTP_SECURE}
      SMTP_DOCKER_USER: ${PROD_SMTP_AUTH_USER}
      SMTP_DOCKER_PASSWORD: ${PROD_SMTP_AUTH_PASS}
  
    ports:
      - ${PROD_DOCKER_HTTP_PORT}:${PROD_DOCKER_HTTP_PORT}
    # command: "npm run dev"
    depends_on:
      - ${PROD_MONGO_DB_COTAINER_NAME}
      - ${PROD_MONGO_EXPRESS_CONTAINER_NAME}
networks:
  default:
    name: ${PROD_MONGO_NETWORKS_NAME} # use the same network as the MongoDB container
    external: true # use an external network

#   # MongoDB Services
#   mongo_db_uatiz:
#     container_name: ${MONGO_DOCKER_CONTAINER_NAME}
#     image: mongo:latest
#     restart: always
#     command: mongod --auth
#     environment:
#       MONGO_INITDB_ROOT_USERNAME: ${MONGO_DOCKER_USER}
#       MONGO_INITDB_ROOT_PASSWORD: ${MONGO_DOCKER_PASSWORD}
#     ports:
#       - ${MONGO_DOCKER_PORT}:27017
#     volumes:
#       - ${MONGO_DOCKER_CONTAINER_NAME}:/data/db

#   # Mongo Express Services
#   mongo_express_uatiz:
#     container_name: ${MONGO_EXPRESS_DOCKER_CONTAINER_NAME}
#     image: mongo-express:latest
#     restart: always
#     ports:
#       - ${MONGO_EXPRESS_DOCKER_PORT}:8082
#     environment:
#       ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_EXPRESS_DOCKER_USER}
#       ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_EXPRESS_DOCKER_PASSWORD}
#       ME_CONFIG_MONGODB_URL: mongodb://${MONGO_DOCKER_USER}:${MONGO_DOCKER_PASSWORD}@${MONGO_DOCKER_CONTAINER_NAME}:27017/
#       # Basic Auth is recommended for security reasons
#       ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_DOCKER_USER}
#       ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_DOCKER_PASSWORD}
#       ME_CONFIG_OPTIONS_EDITORTHEME: ${MONGO_EXPRESS_DOCKER_THEME}
#     depends_on:
#       - "mongo_db_uatiz"

# volumes:
#   mongo_db_uatiz: {} # mount the host's /data/db directory to the container's /data/db directory

# networks:
#   default:
#     name: ${PROD_DOCKER_NETWORK_NAME}